version: "3"

networks:
  queue:
  app_private:
  app_public:
  phpmyadmin:
  user_private:
  user_public:
  frontend:
  webserver:

services:

  webserver:
    image: nginx:mainline-alpine3.17-slim
    container_name: ${PROJECT_NAME}_webserver
    ports:
      - "${WEBSERVER_APP_PORT}:80"
      - "${WEBSERVER_MIC_USER_PORT}:90"
    volumes:
      - ${APP_PATH}:${APP_WORKING_DIR}
      - ${MIC_USER_PATH}:${MIC_USER_WORKING_DIR}
      - ${WEBSERVER_CONF_PATH}:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - user_microservice
    networks:
      - app_public
      - user_public
      - frontend

  app:
    build:
      context: "./docker/app/"
      dockerfile: dockerfile
    container_name: ${PROJECT_NAME}_app
    volumes:
      - ${APP_PATH}:${APP_WORKING_DIR}
    depends_on:
      - app_db
    networks:
      - app_private
      - app_public
      - queue

  app_db:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}_app_db
    volumes:
      - ${APP_DB_PERSIST_PATH}:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${APP_DB_DATABASENAME}
      MYSQL_USER: ${APP_DB_USER}
      MYSQL_PASSWORD: ${APP_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: "${APP_DB_ROOT_PASSWORD}"
    networks:
      - app_private
      - phpmyadmin

  phpmyadmin:
    image: phpmyadmin
    container_name: ${PROJECT_NAME}_phpmyadmin
    restart: always
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_ARBITRARY: 1
      PMA_PORT: 3306
      UPLOAD_LIMIT: 300M
    networks:
      - phpmyadmin

  rabbitmQ:
    image: rabbitmq:management-alpine
    container_name: ${PROJECT_NAME}_rabbitmQ
    ports:
      - "${RABBITMQ_PORT}:15672" # 5672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    networks:
      - queue
  
  user_microservice:
    build:
      context: "./docker/microservices/user"
      dockerfile: dockerfile
    container_name: ${PROJECT_NAME}_user_microservice
    volumes:
      - ${MIC_USER_PATH}:${MIC_USER_WORKING_DIR}
    depends_on:
      - user_microservice_db
    networks:
      - user_private
      - user_public
      - queue

  user_microservice_db:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}_user_microservice_db
    volumes:
      - ${MIC_USER_DB_PERSIST_PATH}:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MIC_USER_DB_DATABASENAME}
      MYSQL_USER: ${MIC_USER_DB_USER}
      MYSQL_PASSWORD: ${MIC_USER_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: "${MIC_USER_DB_ROOT_PASSWORD}"
    networks:
      - user_private
      - phpmyadmin

  frontend:
    build:
      context: "./microservices/frontend"
      dockerfile: dockerfile
    container_name: ${PROJECT_NAME}_frontend
    volumes:
      - ${MIC_FRONTEND_PATH}:${MIC_FRONTEND_WORKING_DIR}
    ports:
      - "${MIC_FRONTEND_PORT}:3000"
      - "24678:24678"
    networks:
      - frontend
      - user_public
      - app_public
